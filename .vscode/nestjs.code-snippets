{
	"n-module": {
		"scope": "typescript",
		"prefix": "n-module",
    "isFileTemplate": true,
		"body": [
			"import { Module } from '@nestjs/common';",
			"",
			"@Module({",
			"  imports: [],",
			"  controllers: [],",
			"  providers: [],",
			"})",
			"export class ${1:ModuleName}Module {}"
		],
		"description": "NestJS Module"
	},
  "n-controller": {
    "scope": "typescript",
    "prefix": "n-controller",
    "isFileTemplate": true,
    "body": [
      "import { Controller, Get } from '@nestjs/common';",
      "import { Logger } from '../utils/winston/winston.service'",
      "",
      "@Controller('${1:route}')",
      "export class ${2:ControllerName}Controller {",
      "  private readonly logger = new Logger(${2}Controller.name)",
      "",
      "  @Get()",
      "  get${3:MethodName}() {",
      "    return ${4:this.prisma()};",
      "  }",
      "}"
    ],
  },
  "n-service": {
    "scope": "typescript",
    "prefix": "n-service",
    "isFileTemplate": true,
    "body": [
      "import { Injectable } from '@nestjs/common';",
      "import { Prisma } from '@prisma/client'",
      "import { PrismaService } from '../utils/prisma/prisma.service'",
      "import { Logger } from '../utils/winston/winston.service'",
      "",
      "@Injectable()",
      "export class ${1:ServiceName}Service {",
      "  private readonly logger = new Logger(${1}Service.name)",
      "",
      "  constructor(private prisma: PrismaService) {}",
      "}"
    ]
  }
}