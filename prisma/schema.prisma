// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../src/@generated"
  outputToNestJsResourceStructure = true
  prettier                        = true
  classValidation                 = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Possible Enums:
// - Role
// - Dice
// - SourceType
// - Size

model User {
  /// @example 1
  /// @description Unique identifier for the user
  id        Int      @id @default(autoincrement())
  /// @example test@email.com
  /// @description The user's email address
  email     String   @unique
  /// @MinLength(4)
  /// @minLength 4
  /// @MaxLength(16)
  /// @maxLength 16
  /// @example testuser
  /// @description The user's username
  username  String   @unique
  /// @MinLength(2)
  /// @minLength 2
  /// @MaxLength(16)
  /// @maxLength 16
  /// @example Test User
  /// @description The user's name
  name      String?
  /// @MinLength(8)
  /// @minLength 8
  /// @MaxLength(30)
  /// @maxLength 30
  /// @example testpassword
  /// @description The user's password
  password  String
  /// @description The user's API Keys
  apiKeys   ApiKey[]
  /// @example 2022-01-01T00:00:00Z
  /// @description DateTime the user was created
  createdAt DateTime @default(now())
  /// @example 2022-01-01T00:00:00Z
  /// @description DateTime the user was last updated
  updatedAt DateTime @updatedAt
}

model ApiKey {
  /// @example 1
  /// @description Unique identifier for the API Key
  id        Int      @id @default(autoincrement())
  /// @DtoUpdateRequired
  /// @MinLength(3)
  /// @minLength 3
  /// @MaxLength(25)
  /// @maxLength 25
  /// @example Test API Key
  /// @description The name of the API Key
  name      String
  /// @DtoReadOnly
  /// @example dp-aldkhlkanlk,23.dflkj898798h23kbb3llk
  /// @description The API Key
  key       String   @unique
  /// @description The user the API Key belongs to
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  /// @example 1
  /// @description The user's ID
  userId    Int
  /// @DtoUpdateHidden
  /// @DtoCreateOptional
  /// @example 2022-01-01T00:00:00Z
  /// @description DateTime the API Key expires at
  expiresAt DateTime
  /// @example 2022-01-01T00:00:00Z
  /// @description DateTime the API Key was created
  createdAt DateTime @default(now())
  /// @example 2022-01-01T00:00:00Z
  /// @description DateTime the API Key was last updated
  updatedAt DateTime @updatedAt
}

// model Source {
//   id           Int        @id @default(autoincrement())
//   name         String
//   abbreviation String?
//   type         String
//   system       System     @relation(fields: [systemId], references: [id])
//   systemId     Int
//   classes      Class[]
//   subclasses   SubClass[]
//   races        Race[]
//   subRaces     SubRace[]
//   createdAt    DateTime   @default(now())
//   updatedAt    DateTime   @updatedAt
// }

// model System {
//   id            Int            @id @default(autoincrement())
//   name          String         @unique
//   desc          String?
//   sources       Source[]
//   abilityScores AbilityScore[]
//   skills        Skill[]
//   createdAt     DateTime       @default(now())
//   updatedAt     DateTime       @updatedAt
// }

// model AbilityScore {
//   id        Int      @id @default(autoincrement())
//   name      String
//   full_name String
//   desc      String?
//   skills    Skill[]
//   system    System   @relation(fields: [systemId], references: [id])
//   systemId  Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@unique([id, systemId])
//   @@unique([name, systemId])
// }

// model Skill {
//   id        Int          @id @default(autoincrement())
//   name      String
//   desc      String?
//   ability   AbilityScore @relation(fields: [abilityId, systemId], references: [id, systemId])
//   abilityId Int
//   system    System       @relation(fields: [systemId], references: [id])
//   systemId  Int
//   createdAt DateTime     @default(now())
//   updatedAt DateTime     @updatedAt

//   @@unique([name, systemId])
// }

// model Class {
//   id         Int        @id @default(autoincrement())
//   name       String
//   desc       String?
//   hitDie     Int
//   subclasses SubClass[]
//   source     Source     @relation(fields: [sourceId], references: [id])
//   sourceId   Int
//   createdAt  DateTime   @default(now())
//   updatedAt  DateTime   @updatedAt
// }

// model SubClass {
//   id        Int      @id @default(autoincrement())
//   name      String
//   desc      String?
//   class     Class    @relation(fields: [classId], references: [id])
//   classId   Int
//   source    Source   @relation(fields: [sourceId], references: [id])
//   sourceId  Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Race {
//   id        Int       @id @default(autoincrement())
//   name      String
//   speed     Int
//   size      String
//   subRaces  SubRace[]
//   source    Source    @relation(fields: [sourceId], references: [id])
//   sourceId  Int
//   createdAt DateTime  @default(now())
//   updatedAt DateTime  @updatedAt
// }

// model SubRace {
//   id        Int      @id @default(autoincrement())
//   name      String
//   race      Race     @relation(fields: [raceId], references: [id])
//   raceId    Int
//   source    Source   @relation(fields: [sourceId], references: [id])
//   sourceId  Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Spell {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Item {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Monster {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Trait {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Feat {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
