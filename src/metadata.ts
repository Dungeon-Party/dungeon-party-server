/* eslint-disable */
export default async () => {
    const t = {
        ["./@generated/apiKey/entities/apiKey.entity"]: await import("./@generated/apiKey/entities/apiKey.entity"),
        ["./@generated/user/entities/user.entity"]: await import("./@generated/user/entities/user.entity"),
        ["./api-key/dto/create-api-key-response.dto"]: await import("./api-key/dto/create-api-key-response.dto"),
        ["./api-key/entities/api-key.entity"]: await import("./api-key/entities/api-key.entity"),
        ["./user/entities/user.entity"]: await import("./user/entities/user.entity"),
        ["./auth/dto/token-response.dto"]: await import("./auth/dto/token-response.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./user/entities/user.entity"), { "User": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, email: { required: true, type: () => String }, username: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./api-key/dto/create-api-key-response.dto"), { "CreateApiKeyResponseDto": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, userId: { required: true, type: () => Number }, expiresAt: { required: true, type: () => Date }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./api-key/dto/create-api-key.dto"), { "CreateApiKeyDto": { name: { required: true, type: () => String, minLength: 3, maxLength: 25 }, expiresAt: { required: false, type: () => Date } } }], [import("./api-key/entities/api-key.entity"), { "ApiKey": { id: { required: true, type: () => Number }, name: { required: true, type: () => String, minLength: 3, maxLength: 25 }, userId: { required: true, type: () => Number }, expiresAt: { required: true, type: () => Date }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./user/dto/create-user.dto"), { "CreateUserDto": { email: { required: true, type: () => String }, username: { required: true, type: () => String, minLength: 4, maxLength: 16 }, name: { required: false, type: () => String, nullable: true, minLength: 2, maxLength: 16 }, password: { required: true, type: () => String, minLength: 8, maxLength: 30 } } }], [import("./user/dto/update-user.dto"), { "UpdateUserDto": { email: { required: false, type: () => String }, username: { required: false, type: () => String, minLength: 4, maxLength: 16 }, name: { required: false, type: () => String, nullable: true, minLength: 2, maxLength: 16 }, password: { required: false, type: () => String, minLength: 8, maxLength: 30 } } }], [import("./auth/dto/jwt-payload.dto"), { "JwtPayloadDto": { sub: { required: true, type: () => Number }, iss: { required: true, type: () => String }, username: { required: true, type: () => String }, email: { required: true, type: () => String }, iat: { required: true, type: () => Number }, exp: { required: true, type: () => Number } } }], [import("./auth/dto/signup.dto"), { "SignUpDto": { name: { required: true, type: () => String }, username: { required: true, type: () => String }, password: { required: true, type: () => String }, passwordConfirmation: { required: true, type: () => String }, email: { required: true, type: () => String } } }], [import("./auth/dto/token-response.dto"), { "TokenResponseDto": { accessToken: { required: true, type: () => String }, refreshToken: { required: true, type: () => String } } }], [import("./auth/dto/login.dto"), { "LoginDto": { username: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./@generated/apiKey/dto/apiKey.dto"), { "ApiKeyDto": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, key: { required: true, type: () => String }, expiresAt: { required: true, type: () => Date }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./@generated/apiKey/dto/connect-apiKey.dto"), { "ConnectApiKeyDto": { id: { required: false, type: () => Number }, key: { required: false, type: () => String } } }], [import("./@generated/apiKey/dto/create-apiKey.dto"), { "CreateApiKeyDto": { name: { required: true, type: () => String, minLength: 3, maxLength: 25 }, expiresAt: { required: false, type: () => Date } } }], [import("./@generated/apiKey/dto/update-apiKey.dto"), { "UpdateApiKeyDto": { name: { required: true, type: () => String, minLength: 3, maxLength: 25 } } }], [import("./@generated/user/entities/user.entity"), { "User": { id: { required: true, type: () => Number }, email: { required: true, type: () => String }, username: { required: true, type: () => String }, name: { required: true, type: () => String, nullable: true }, password: { required: true, type: () => String }, apiKeys: { required: false, type: () => [t["./@generated/apiKey/entities/apiKey.entity"].ApiKey] }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./@generated/apiKey/entities/apiKey.entity"), { "ApiKey": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, key: { required: true, type: () => String }, user: { required: false, type: () => t["./@generated/user/entities/user.entity"].User }, userId: { required: true, type: () => Number }, expiresAt: { required: true, type: () => Date }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./@generated/user/dto/connect-user.dto"), { "ConnectUserDto": { id: { required: false, type: () => Number }, email: { required: false, type: () => String }, username: { required: false, type: () => String, minLength: 4, maxLength: 16 } } }], [import("./@generated/user/dto/create-user.dto"), { "CreateUserDto": { email: { required: true, type: () => String }, username: { required: true, type: () => String, minLength: 4, maxLength: 16 }, name: { required: false, type: () => String, nullable: true, minLength: 2, maxLength: 16 }, password: { required: true, type: () => String, minLength: 8, maxLength: 30 } } }], [import("./@generated/user/dto/update-user.dto"), { "UpdateUserDto": { email: { required: false, type: () => String }, username: { required: false, type: () => String, minLength: 4, maxLength: 16 }, name: { required: false, type: () => String, nullable: true, minLength: 2, maxLength: 16 }, password: { required: false, type: () => String, minLength: 8, maxLength: 30 } } }], [import("./@generated/user/dto/user.dto"), { "UserDto": { id: { required: true, type: () => Number }, email: { required: true, type: () => String }, username: { required: true, type: () => String }, name: { required: true, type: () => String, nullable: true }, password: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./api-key/dto/update-apiKey.dto"), { "UpdateApiKeyDto": { name: { required: true, type: () => String, minLength: 3, maxLength: 25 } } }]], "controllers": [[import("./api-key/api-key.controller"), { "ApiKeyController": { "create": { type: t["./api-key/dto/create-api-key-response.dto"].CreateApiKeyResponseDto }, "delete": { type: t["./api-key/entities/api-key.entity"].ApiKey } } }], [import("./user/user.controller"), { "UserController": { "getUsers": { type: [t["./user/entities/user.entity"].User] }, "updateUser": { type: t["./user/entities/user.entity"].User } } }], [import("./auth/auth.controller"), { "AuthController": { "login": { type: t["./auth/dto/token-response.dto"].default }, "register": { type: t["./user/entities/user.entity"].User }, "refresh": { type: t["./auth/dto/token-response.dto"].default }, "getProfile": { type: t["./user/entities/user.entity"].User } } }], [import("./health/health.controller"), { "HealthController": { "check": { type: Object } } }]] }, "@nestjs/graphql": { "models": [[import("./user/entities/user.entity"), { "User": { password: { type: () => String }, id: {}, name: {}, email: {}, username: {}, createdAt: {}, updatedAt: {} } }], [import("./api-key/entities/api-key.entity"), { "ApiKey": { key: { type: () => String }, id: {}, name: {}, userId: {}, expiresAt: {}, createdAt: {}, updatedAt: {} } }]] } };
};